name: HoS-CI

on:
  push:
    branches:
      - '**'        # matches every branch

jobs:
  lint-n-test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:

    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pylint pipenv
        if [ -f Pipfile ]; then pipenv install; fi

    - name: Linting code
      run: |
        pipenv run flake8 . --count --max-complexity=10 --max-line-length=127 --show-source --statistics

    - name: Unittest with coverage
      run: |
        export HOUSE_OF_SOULS_BACKEND_SECRET_KEY="${{ secrets.HOUSE_OF_SOULS_BACKEND_SECRET_KEY }}"
        export HOUSE_OF_SOULS_BACKEND_ENVIRONMENT="${{ secrets.HOUSE_OF_SOULS_BACKEND_ENVIRONMENT }}"
        export HOUSE_OF_SOULS_BACKEND_ALLOWED_HOSTS="${{ secrets.HOUSE_OF_SOULS_BACKEND_ALLOWED_HOSTS }}"
        export HOUSE_OF_SOULS_BACKEND_FIREBASE_SERVICE_FILE="${{ secrets.HOUSE_OF_SOULS_BACKEND_FIREBASE_SERVICE_FILE }}"
        export HOUSE_OF_SOULS_BACKEND_PROJECT_NAME="${{ secrets.HOUSE_OF_SOULS_BACKEND_PROJECT_NAME }}"
        export HOUSE_OF_SOULS_BACKEND_ADMIN_USERNAME="${{ secrets.HOUSE_OF_SOULS_BACKEND_ADMIN_USERNAME }}"
        export HOUSE_OF_SOULS_BACKEND_ADMIN_PASSWORD="${{ secrets.HOUSE_OF_SOULS_BACKEND_ADMIN_PASSWORD }}"
        export HOUSE_OF_SOULS_BACKEND_ADMIN_EMAIL="${{ secrets.HOUSE_OF_SOULS_BACKEND_ADMIN_EMAIL }}"
        cd house_of_souls/
        pipenv run coverage run --source='.' manage.py test
        pipenv run coverage report
